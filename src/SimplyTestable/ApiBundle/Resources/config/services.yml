services:
  simplytestable.session.handler:
    class: Symfony\Component\HttpFoundation\Session\Storage\Handler\NullSessionHandler
  
  simplytestable.services.httpClientService:
    class:  SimplyTestable\ApiBundle\Services\HttpClientService

  simplytestable.services.websiteservice:
    class:  SimplyTestable\ApiBundle\Services\WebSiteService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"
        httpClientService: "@simplytestable.services.httpClientService"
        
  simplytestable.services.jobwebsiteresolutionservice:
    class:  SimplyTestable\ApiBundle\Services\Job\WebsiteResolutionService
    arguments:
        jobService: "@simplytestable.services.jobservice" 
        httpClientService: "@simplytestable.services.httpClientService"        
        websiteService: "@simplytestable.services.websiteservice"
        jobRejectionService: "@simplytestable.services.job.rejectionservice"
        
  simplytestable.services.stateservice:
    class:  SimplyTestable\ApiBundle\Services\StateService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager" 
        
  simplytestable.services.taskservice:
    class:  SimplyTestable\ApiBundle\Services\TaskService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"      
        stateService: "@simplytestable.services.stateservice"
        resqueQueueService: "@simplytestable.services.resqueQueueService"
        
  simplytestable.services.jobservice:
    class:  SimplyTestable\ApiBundle\Services\JobService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"
        stateService: "@simplytestable.services.stateservice"
        taskService: "@simplytestable.services.taskservice"
        taskTypeService: "@simplytestable.services.tasktypeservice"
        
  simplytestable.services.job.rejectionservice:
    class:  SimplyTestable\ApiBundle\Services\Job\RejectionService  
    arguments:
        jobService: "@simplytestable.services.jobservice" 
        
  simplytestable.services.joblistservice:
    class:  SimplyTestable\ApiBundle\Services\JobListService
    arguments: 
        jobService: "@simplytestable.services.jobservice"        
        
  simplytestable.services.userservice:
    class:  SimplyTestable\ApiBundle\Services\UserService
    arguments:
        encoderFactory: "@security.encoder_factory"
        usernameCanonicalizer: "@fos_user.util.username_canonicalizer"
        emailCanonicalizer: "@fos_user.util.email_canonicalizer"
        objectManager: "@doctrine.orm.entity_manager"
        class: %fos_user.model.user.class%
        tokenGeneratorClass: \FOS\UserBundle\Util\TokenGenerator
        
  simplytestable.services.workerservice:
    class:  SimplyTestable\ApiBundle\Services\WorkerService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"
        workeractivationRequestService: "@simplytestable.services.workeractivationrequestservice"
        httpClientService: "@simplytestable.services.httpClientService"
        stateService: "@simplytestable.services.stateservice"
    
  simplytestable.controller.action_listener:
    class: SimplyTestable\ApiBundle\EventListener\BeforeListener    
    arguments:
        logger: "@logger"
    tags:
      - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }    
      
  simplytestable.services.workeractivationrequestservice:
    class:  SimplyTestable\ApiBundle\Services\WorkerActivationRequestService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"
        logger: "@logger"
        stateService: "@simplytestable.services.stateservice"
        httpClientService: "@simplytestable.services.httpClientService"
        urlService: "@simplytestable.services.urlService"
        
  simplytestable.services.urlService:
    class:  SimplyTestable\ApiBundle\Services\UrlService           
    
  simplytestable.services.resqueQueueService:
    class:   SimplyTestable\ApiBundle\Services\ResqueQueueService
    arguments:
      queueManager: "@glit_resque.queue_manager"
      logger: "@logger"
      resquePrefix: "%glit_resque.prefix%"

  simplytestable.services.workertaskservice:
    class:  SimplyTestable\ApiBundle\Services\WorkerTaskAssignmentService
    arguments: 
        logger: "@logger"
        workerService: "@simplytestable.services.workerservice"
        stateService: "@simplytestable.services.stateservice"
        httpClientService: "@simplytestable.services.httpClientService"
        urlService: "@simplytestable.services.urlService"      
        taskService: "@simplytestable.services.taskservice"      
      
  simplytestable.services.workertaskassignmentservice:
    class:  SimplyTestable\ApiBundle\Services\WorkerTaskAssignmentService
    arguments: 
        logger: "@logger"
        workerService: "@simplytestable.services.workerservice"
        stateService: "@simplytestable.services.stateservice"
        httpClientService: "@simplytestable.services.httpClientService"
        urlService: "@simplytestable.services.urlService"      
        taskService: "@simplytestable.services.taskservice"
        
  simplytestable.services.workertaskcancellationservice:
    class:  SimplyTestable\ApiBundle\Services\WorkerTaskCancellationService
    arguments: 
        logger: "@logger"
        workerService: "@simplytestable.services.workerservice"
        stateService: "@simplytestable.services.stateservice"
        httpClientService: "@simplytestable.services.httpClientService"
        urlService: "@simplytestable.services.urlService"      
        taskService: "@simplytestable.services.taskservice"
        
  simplytestable.services.taskassignmentselectionservice:
    class:  SimplyTestable\ApiBundle\Services\TaskAssignmentSelectionService
    arguments:             
        jobService: "@simplytestable.services.jobservice"        
        taskService: "@simplytestable.services.taskservice" 
        logger: "@logger"
        
  simplytestable.services.tasktypeservice:
    class:  SimplyTestable\ApiBundle\Services\TaskTypeService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"      
        
  simplytestable.services.jobtypeservice:
    class:  SimplyTestable\ApiBundle\Services\JobTypeService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"              
        
  simplytestable.services.applicationStateService:
    class:  SimplyTestable\ApiBundle\Services\ApplicationStateService  
    
  simplytestable.services.commandService:
    class:   SimplyTestable\ApiBundle\Services\CommandService
    arguments:
      container: "@service_container"     
      
  simplytestable.services.accountPlanService:
    class:   SimplyTestable\ApiBundle\Services\AccountPlanService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"   
        
  simplytestable.services.userAccountPlanService:
    class:   SimplyTestable\ApiBundle\Services\UserAccountPlanService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager" 
        userService: "@simplytestable.services.userservice" 
        stripeService: "@simplytestable.services.stripeservice" 
        defaultTrialPeriod: "%default_trial_period%"
        
  simplytestable.services.useremailchangerequestservice:
    class:  SimplyTestable\ApiBundle\Services\UserEmailChangeRequestService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        emailCanonicalizer: "@fos_user.util.email_canonicalizer"
        tokenGeneratorClass: \FOS\UserBundle\Util\TokenGenerator  
        
  simplytestable.services.jobUserAccountPlanEnforcementService:
    class:   SimplyTestable\ApiBundle\Services\JobUserAccountPlanEnforcementService
    arguments: 
        userAccountPlanService: "@simplytestable.services.userAccountPlanService" 
        jobService: "@simplytestable.services.jobservice"        
        taskService: "@simplytestable.services.taskservice" 
        
  simplytestable.services.jobRejectionReasonService:
    class:   SimplyTestable\ApiBundle\Services\JobRejectionReasonService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"           
        
  simplytestable.services.jobPreparationService:
    class:   SimplyTestable\ApiBundle\Services\JobPreparationService
    arguments: 
        jobService: "@simplytestable.services.jobservice"
        taskService: "@simplytestable.services.taskservice"
        jobTypeService: "@simplytestable.services.jobtypeservice"
        websiteService: "@simplytestable.services.websiteservice"
        jobUserAccountPlanEnforcementService: "@simplytestable.services.jobUserAccountPlanEnforcementService"
        crawlJobContainerService: "@simplytestable.services.crawljobcontainerservice"
        userService: "@simplytestable.services.userservice" 
        resqueQueueService: "@simplytestable.services.resqueQueueService"
        
  simplytestable.services.stripeEventService:
    class:   SimplyTestable\ApiBundle\Services\StripeEventService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"           
        
  simplytestable.services.stripeService:
    class:   SimplyTestable\ApiBundle\Services\StripeService
    arguments: 
        apiKey: "%stripe_key%"          
        
  simplytestable.services.crawljobcontainerservice:
    class:  SimplyTestable\ApiBundle\Services\CrawlJobContainerService
    arguments: 
        entityManager: "@doctrine.orm.entity_manager"
        taskService: "@simplytestable.services.taskservice"
        taskTypeService: "@simplytestable.services.tasktypeservice"
        jobTypeService: "@simplytestable.services.jobtypeservice"
        jobService: "@simplytestable.services.jobservice"
        jobUserAccountPlanEnforcementService: "@simplytestable.services.jobUserAccountPlanEnforcementService"
     
  simplytestable.services.taskPreprocessorServiceFactory:
    class:   SimplyTestable\ApiBundle\Services\TaskPreProcessor\FactoryService
    arguments:
        container: "@service_container"
        taskPreProcessors: %task_pre_processors%              
        
  simplytestable.services.webresourceservice:
    class:   SimplyTestable\ApiBundle\Services\WebResourceService
    arguments:
        httpClientService: "@simplytestable.services.httpClientService"
        contentTypeWebResourceMap: %content_type_web_resource_map%        
        
  simplytestable.services.taskOutputJoinerServiceFactory:
    class:   SimplyTestable\ApiBundle\Services\TaskOutputJoiner\FactoryService
    arguments:
        container: "@service_container"
        taskOutputJoiners: %task_output_joiners%          
        
  simplytestable.listener.stripe.customer.subscription.deleted.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\CustomerSubscriptionDeletedListener
    arguments:
        logger: "@logger"
        stripeService: "@simplytestable.services.stripeservice"
        stripeEventService: "@simplytestable.services.stripeeventservice"
        userAccountPlanService: "@simplytestable.services.useraccountplanservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        accountPlanService: "@simplytestable.services.accountPlanService"
        webClientProperties: %web_client%    
    tags: 
      - { name: kernel.event_listener, event: stripe_process.customer.subscription.deleted, method: onCustomerSubscriptionDeleted }                   
        
  simplytestable.listener.stripe.customer.subscription.created.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\CustomerSubscriptionCreatedListener
    arguments:
        logger: "@logger"
        stripeService: "@simplytestable.services.stripeservice"
        stripeEventService: "@simplytestable.services.stripeeventservice"
        userAccountPlanService: "@simplytestable.services.useraccountplanservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        accountPlanService: "@simplytestable.services.accountPlanService"
        webClientProperties: %web_client%    
    tags:
      - { name: kernel.event_listener, event: stripe_process.customer.subscription.created, method: onCustomerSubscriptionCreated }
      
  simplytestable.listener.stripe.customer.subscription.trial_will_end.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\CustomerSubscriptionTrialWillEndListener
    arguments:
        logger: "@logger"
        stripeService: "@simplytestable.services.stripeservice"
        stripeEventService: "@simplytestable.services.stripeeventservice"
        userAccountPlanService: "@simplytestable.services.useraccountplanservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        accountPlanService: "@simplytestable.services.accountPlanService"
        webClientProperties: %web_client%    
    tags:
      - { name: kernel.event_listener, event: stripe_process.customer.subscription.trial_will_end, method: onCustomerSubscriptionTrialWillEnd }           
      
  simplytestable.listener.stripe.customer.subscription.updated.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\CustomerSubscriptionUpdatedListener
    arguments:
        logger: "@logger"
        stripeService: "@simplytestable.services.stripeservice"
        stripeEventService: "@simplytestable.services.stripeeventservice"
        userAccountPlanService: "@simplytestable.services.useraccountplanservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        accountPlanService: "@simplytestable.services.accountPlanService"
        webClientProperties: %web_client%    
    tags:
      - { name: kernel.event_listener, event: stripe_process.customer.subscription.updated, method: onCustomerSubscriptionUpdated }                 
      
  simplytestable.listener.stripe.invoice.succeeded.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\InvoicePaymentSucceededListener
    arguments:
        logger: "@logger"
        stripeService: "@simplytestable.services.stripeservice"
        stripeEventService: "@simplytestable.services.stripeeventservice"
        userAccountPlanService: "@simplytestable.services.useraccountplanservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        accountPlanService: "@simplytestable.services.accountPlanService"
        webClientProperties: %web_client%    
    tags:
      - { name: kernel.event_listener, event: stripe_process.invoice.payment_succeeded, method: onInvoicePaymentSucceeded }       
      
  simplytestable.listener.stripe.invoice.payment_failed.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\InvoicePaymentFailedListener
    arguments:
        logger: "@logger"
        stripeService: "@simplytestable.services.stripeservice"
        stripeEventService: "@simplytestable.services.stripeeventservice"
        userAccountPlanService: "@simplytestable.services.useraccountplanservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        accountPlanService: "@simplytestable.services.accountPlanService"
        webClientProperties: %web_client%    
    tags:
      - { name: kernel.event_listener, event: stripe_process.invoice.payment_failed, method: onInvoicePaymentFailed }      