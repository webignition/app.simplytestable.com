imports:
    - { resource: services/commands.yml }
    - { resource: services/resque-job-factory.yml }
    - { resource: services/repositories.yml }

services:
  simplytestable.session.handler:
    class: Symfony\Component\HttpFoundation\Session\Storage\Handler\NullSessionHandler

  simplytestable.services.httpClientService:
    class:  SimplyTestable\ApiBundle\Services\HttpClientService
    arguments:
        curlOptions: "%curl_options%"

  simplytestable.services.websiteservice:
    class:  SimplyTestable\ApiBundle\Services\WebSiteService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.jobwebsiteresolutionservice:
    class:  SimplyTestable\ApiBundle\Services\Job\WebsiteResolutionService
    arguments:
        jobService: "@simplytestable.services.jobservice"
        httpClientService: "@simplytestable.services.httpClientService"
        websiteService: "@simplytestable.services.websiteservice"
        urlResolver: '@simplytestable.services.urlresolver'
        stateService: '@simplytestable.services.stateservice'
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.stateservice:
    class:  SimplyTestable\ApiBundle\Services\StateService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.taskservice:
    class:  SimplyTestable\ApiBundle\Services\TaskService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        stateService: "@simplytestable.services.stateservice"
        resqueQueueService: "@simplytestable.services.resque.queueService"

  simplytestable.services.jobservice:
    class:  SimplyTestable\ApiBundle\Services\JobService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        stateService: "@simplytestable.services.stateservice"
        taskService: "@simplytestable.services.taskservice"
        taskTypeService: "@simplytestable.services.tasktypeservice"

  simplytestable.services.joblistservice:
    class:  SimplyTestable\ApiBundle\Services\JobListService
    arguments:
        jobService: "@simplytestable.services.jobservice"
        teamService: "@simplytestable.services.teamservice"
        jobListQueryBuilderFactory: '@simplytestable.services.joblistquerybuilderfactory'

  simplytestable.services.userservice:
    class:  SimplyTestable\ApiBundle\Services\UserService
    arguments:
        userManager: '@fos_user.user_manager'
        entityManager: "@doctrine.orm.entity_manager"
        tokenGenerator: '@fos_user.util.token_generator'
        emailCanonicalizer: '@fos_user.util.email_canonicalizer'

  simplytestable.services.workeractivationrequestservice:
    class:  SimplyTestable\ApiBundle\Services\WorkerActivationRequestService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        logger: "@logger"
        stateService: "@simplytestable.services.stateservice"
        httpClientService: "@simplytestable.services.httpClientService"
        urlService: "@simplytestable.services.urlService"

  simplytestable.services.urlService:
    class:  SimplyTestable\ApiBundle\Services\UrlService

  simplytestable.services.resque.queueService:
    class:   SimplyTestable\ApiBundle\Services\Resque\QueueService
    arguments:
      resque: "@resque"
      environment: "%kernel.environment%"
      logger: "@logger"
      jobFactory: "@simplytestable.services.resque.jobfactory"

  simplytestable.services.workertaskassignmentservice:
    class:  SimplyTestable\ApiBundle\Services\WorkerTaskAssignmentService
    arguments:
        logger: "@logger"
        stateService: "@simplytestable.services.stateservice"
        httpClientService: "@simplytestable.services.httpClientService"
        urlService: "@simplytestable.services.urlService"
        taskService: "@simplytestable.services.taskservice"
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.workertaskcancellationservice:
    class:  SimplyTestable\ApiBundle\Services\WorkerTaskCancellationService
    arguments:
        logger: "@logger"
        stateService: "@simplytestable.services.stateservice"
        httpClientService: "@simplytestable.services.httpClientService"
        urlService: "@simplytestable.services.urlService"
        taskService: "@simplytestable.services.taskservice"

  simplytestable.services.tasktypeservice:
    class:  SimplyTestable\ApiBundle\Services\TaskTypeService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.jobtypeservice:
    class:  SimplyTestable\ApiBundle\Services\JobTypeService
    arguments:
        jobTypeRepository: "@simplytestable.repository.jobtype"

  simplytestable.services.accountplan:
    class:  SimplyTestable\ApiBundle\Services\AccountPlanService
    arguments:
        accountPlanRepository: "@simplytestable.repository.accountplan"

  simplytestable.services.applicationStateService:
    class:  SimplyTestable\ApiBundle\Services\ApplicationStateService
    arguments:
      resourceLocator: '@simplytestable.services.resourcelocator'
      kernel: '@kernel'

  simplytestable.services.userAccountPlanService:
    class:   SimplyTestable\ApiBundle\Services\UserAccountPlanService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        userService: "@simplytestable.services.userservice"
        stripeService: "@simplytestable.services.stripeservice"
        teamService: "@simplytestable.services.teamservice"
        userRepository: '@simplytestable.repository.user'
        defaultTrialPeriod: "%default_trial_period%"

  simplytestable.services.useremailchangerequestservice:
    class:  SimplyTestable\ApiBundle\Services\UserEmailChangeRequestService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        emailCanonicalizer: "@fos_user.util.email_canonicalizer"
        tokenGenerator: '@fos_user.util.token_generator'

  simplytestable.services.jobUserAccountPlanEnforcementService:
    class:   SimplyTestable\ApiBundle\Services\JobUserAccountPlanEnforcementService
    arguments:
        userAccountPlanService: "@simplytestable.services.userAccountPlanService"
        taskService: "@simplytestable.services.taskservice"
        teamService: "@simplytestable.services.teamservice"
        stateService: '@simplytestable.services.stateservice'
        jobRepository: '@simplytestable.repository.job'
        jobTypeService: '@simplytestable.services.jobtypeservice'
        taskRepository: '@simplytestable.repository.task'

  simplytestable.services.jobPreparationService:
    class:   SimplyTestable\ApiBundle\Services\JobPreparationService
    arguments:
        jobService: "@simplytestable.services.jobservice"
        taskService: "@simplytestable.services.taskservice"
        jobTypeService: "@simplytestable.services.jobtypeservice"
        jobUserAccountPlanEnforcementService: "@simplytestable.services.jobUserAccountPlanEnforcementService"
        crawlJobContainerService: "@simplytestable.services.crawljobcontainerservice"
        userService: "@simplytestable.services.userservice"
        urlFinder: '@simplytestable.services.urlfinder'
        stateService: '@simplytestable.services.stateservice'
        userAccountPlanService: '@simplytestable.services.useraccountplanservice'
        entityManager: "@doctrine.orm.entity_manager"
        crawlJobUrlCollector: '@simplytestable.services.crawljoburlcollector'

  simplytestable.services.stripeEventService:
    class:   SimplyTestable\ApiBundle\Services\StripeEventService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.stripeService:
    class:   SimplyTestable\ApiBundle\Services\StripeService
    arguments:
        apiKey: "%stripe_key%"

  simplytestable.services.crawljobcontainerservice:
    class:  SimplyTestable\ApiBundle\Services\CrawlJobContainerService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        jobService: "@simplytestable.services.jobservice"
        stateService: '@simplytestable.services.stateservice'
        jobTypeService: '@simplytestable.services.jobtypeservice'
        urlDiscoveryTaskService: '@simplytestable.services.task.urldiscovery'

  simplytestable.services.taskpreprocessor.linkintegrity:
    class:   SimplyTestable\ApiBundle\Services\TaskPreProcessor\LinkIntegrityTaskPreProcessor
    arguments:
      taskService: '@simplytestable.services.taskservice'
      webResourceService: '@simplytestable.services.webresourceservice'
      httpClientService: '@simplytestable.services.httpclientservice'
      logger: '@logger'
      stateService: '@simplytestable.services.stateservice'
      taskRepository: '@simplytestable.repository.task'
      entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.taskpreprocessor.factory:
    class:   SimplyTestable\ApiBundle\Services\TaskPreProcessor\Factory
    arguments:
      taskPreprocessors:
        - '@simplytestable.services.taskpreprocessor.linkintegrity'

  simplytestable.services.webResourceService:
    class:  webignition\WebResource\Service\Service
    calls:
      - [createConfiguration, [{allow-uknown-resource-types: "true", retry-with-url-encoding-disabled: "true", content-type-web-resource-map: "%content_type_web_resource_map%" }]]

  simplytestable.services.taskputoutjoiner.linkintegrity:
    class:   SimplyTestable\ApiBundle\Services\TaskOutputJoiner\LinkIntegrityTaskOutputJoiner

  simplytestable.services.taskoutputjoiner.factory:
    class:   SimplyTestable\ApiBundle\Services\TaskOutputJoiner\Factory
    arguments:
      taskPreprocessors:
        - '@simplytestable.services.taskputoutjoiner.linkintegrity'

  simplytestable.listener.stripe.customer.subscription.deleted.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\CustomerSubscriptionDeletedListener
    arguments:
        stripeEventService: "@simplytestable.services.stripeeventservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        entityManager: "@doctrine.orm.entity_manager"
        webClientProperties: "%web_client%"
        stripeService: "@simplytestable.services.stripeservice"
        userAccountPlanService: "@simplytestable.services.useraccountplanservice"
        accountPlanService: "@simplytestable.services.accountplan"
    tags:
      - { name: kernel.event_listener, event: stripe_process.customer.subscription.deleted, method: onCustomerSubscriptionDeleted }

  simplytestable.listener.stripe.customer.subscription.created.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\CustomerSubscriptionCreatedListener
    arguments:
        stripeEventService: "@simplytestable.services.stripeeventservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        entityManager: "@doctrine.orm.entity_manager"
        webClientProperties: "%web_client%"
        stripeService: "@simplytestable.services.stripeservice"
        userAccountPlanService: "@simplytestable.services.useraccountplanservice"
    tags:
      - { name: kernel.event_listener, event: stripe_process.customer.subscription.created, method: onCustomerSubscriptionCreated }

  simplytestable.listener.stripe.customer.subscription.trial_will_end.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\CustomerSubscriptionTrialWillEndListener
    arguments:
        stripeEventService: "@simplytestable.services.stripeeventservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        entityManager: "@doctrine.orm.entity_manager"
        webClientProperties: "%web_client%"
        stripeService: "@simplytestable.services.stripeservice"
        userAccountPlanService: "@simplytestable.services.useraccountplanservice"
    tags:
      - { name: kernel.event_listener, event: stripe_process.customer.subscription.trial_will_end, method: onCustomerSubscriptionTrialWillEnd }

  simplytestable.listener.stripe.customer.subscription.updated.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\CustomerSubscriptionUpdatedListener
    arguments:
        stripeEventService: "@simplytestable.services.stripeeventservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        entityManager: "@doctrine.orm.entity_manager"
        webClientProperties: "%web_client%"
        stripeService: "@simplytestable.services.stripeservice"
        userAccountPlanService: "@simplytestable.services.useraccountplanservice"
        accountPlanService: "@simplytestable.services.accountplan"
    tags:
      - { name: kernel.event_listener, event: stripe_process.customer.subscription.updated, method: onCustomerSubscriptionUpdated }

  simplytestable.listener.stripe.invoice.succeeded.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\InvoicePaymentSucceededListener
    arguments:
        stripeEventService: "@simplytestable.services.stripeeventservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        entityManager: "@doctrine.orm.entity_manager"
        webClientProperties: "%web_client%"
    tags:
      - { name: kernel.event_listener, event: stripe_process.invoice.payment_succeeded, method: onInvoicePaymentSucceeded }

  simplytestable.listener.stripe.invoice.payment_failed.eventProcessor:
    class:   SimplyTestable\ApiBundle\EventListener\Stripe\InvoicePaymentFailedListener
    arguments:
        stripeEventService: "@simplytestable.services.stripeeventservice"
        httpClientService: "@simplytestable.services.httpclientservice"
        entityManager: "@doctrine.orm.entity_manager"
        webClientProperties: "%web_client%"
        stripeService: "@simplytestable.services.stripeservice"
        userAccountPlanService: "@simplytestable.services.useraccountplanservice"
        dispatcher: "@event_dispatcher"
    tags:
      - { name: kernel.event_listener, event: stripe_process.invoice.payment_failed, method: onInvoicePaymentFailed }

  simplytestable.services.postmark.sender:
    class:   SimplyTestable\ApiBundle\Services\Postmark\Sender

  simplytestable.services.mail.service:
    class:   SimplyTestable\ApiBundle\Services\Mail\Service
    arguments:
        postmarkMessage: "@postmark.message"
        postmarkSender: "@simplytestable.services.postmark.sender"

  simplytestable.services.teammemberservice:
    class:  SimplyTestable\ApiBundle\Services\Team\MemberService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.teamservice:
    class:  SimplyTestable\ApiBundle\Services\Team\Service
    arguments:
        teamMemberService: "@simplytestable.services.teammemberservice"
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.teaminviteservice:
    class:  SimplyTestable\ApiBundle\Services\Team\InviteService
    arguments:
        teamService: "@simplytestable.services.teamservice"
        entityManager: "@doctrine.orm.entity_manager"
        tokenGenerator: '@simplytestable.services.invite.tokengenerator'

  simplytestable.services.job.retrievalservice:
    class:  SimplyTestable\ApiBundle\Services\Job\RetrievalService
    arguments:
        teamService: "@simplytestable.services.teamservice"
        jobRepository: '@simplytestable.repository.job'
        tokenStorage: '@security.token_storage'

  simplytestable.services.job.UserPostActivationPropertiesService:
    class:  SimplyTestable\ApiBundle\Services\UserPostActivationPropertiesService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"


  simplytestable.services.task.queueService:
    class:  SimplyTestable\ApiBundle\Services\Task\QueueService
    arguments:
        jobService: '@simplytestable.services.jobservice'
        taskService: "@simplytestable.services.taskservice"
        stateService: '@simplytestable.services.stateservice'
        jobRepository: '@simplytestable.repository.job'
        taskRepository: '@simplytestable.repository.task'

  simplytestable.services.worker.taskNotificationService:
    class:  SimplyTestable\ApiBundle\Services\Worker\TaskNotificationService
    arguments:
        entityManager: '@doctrine.orm.entity_manager'
        stateService: '@simplytestable.services.stateservice'
        httpClientService: "@simplytestable.services.httpClientService"
        urlService: "@simplytestable.services.urlService"
        logger: "@logger"
        workerRepository: '@simplytestable.repository.worker'

  simplytestable.services.job.configurationservice:
    class:  SimplyTestable\ApiBundle\Services\Job\ConfigurationService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        teamService: "@simplytestable.services.teamservice"
        tokenStorage: '@security.token_storage'

  simplytestable.services.scheduledjob.service:
    class: SimplyTestable\ApiBundle\Services\ScheduledJob\Service
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        jobConfigurationService: "@simplytestable.services.job.configurationservice"
        teamService: "@simplytestable.services.teamservice"
        cronManager: "@cron.manager"
        tokenStorage: '@security.token_storage'

  simplytestable.services.job.startservice:
    class:  SimplyTestable\ApiBundle\Services\Job\StartService
    arguments:
        jobUserAccountPlanEnforcementService: "@simplytestable.services.jobUserAccountPlanEnforcementService"
        jobTypeService: "@simplytestable.services.jobtypeservice"
        jobService: "@simplytestable.services.jobservice"
        userService: "@simplytestable.services.userservice"
        resqueQueueService: "@simplytestable.services.resque.queueservice"
        stateService: '@simplytestable.services.stateservice'
        userAccountPlanService: '@simplytestable.services.useraccountplanservice'
        resqueJobFactory: '@simplytestable.services.resque.jobfactory'
        jobRepository: '@simplytestable.repository.job'
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.scheduledjob.cronmodifier.validationservice:
    class: SimplyTestable\ApiBundle\Services\ScheduledJob\CronModifier\ValidationService

  simplytestable.services.request.factory.task.complete:
    class:   SimplyTestable\ApiBundle\Services\Request\Factory\Task\CompleteRequestFactory
    arguments:
        requestStack: "@request_stack"
        stateService: "@simplytestable.services.stateservice"
        taskTypeService: "@simplytestable.services.tasktypeservice"
        taskService: "@simplytestable.services.taskservice"

  simplytestable.services.urlresolver:
    class:  SimplyTestable\ApiBundle\Services\UrlResolver
    arguments:
        httpClientService: "@simplytestable.services.httpClientService"

  simplytestable.services.urlfinder:
    class:  SimplyTestable\ApiBundle\Services\UrlFinder
    arguments:
        httpClientService: "@simplytestable.services.httpClientService"
        webResourceService: "@simplytestable.services.webresourceservice"
        sitemapFactory: '@simplytestable.services.sitemapfactory'

  simplytestable.services.joblistquerybuilderfactory:
    class:   SimplyTestable\ApiBundle\Services\QueryBuilderFactory\JobListQueryBuilderFactory
    arguments:
      teamService: '@simplytestable.services.teamservice'
      jobRepository: '@simplytestable.repository.job'

  simplytestable.services.resourcelocator:
    class:  SimplyTestable\ApiBundle\Services\ResourceLocator
    arguments:
      kernel: '@kernel'

  simplytestable.services.sitemapfactory:
    class:  webignition\WebResource\Sitemap\Factory

  simplytestable.services.request.factory.job.start:
    class:   SimplyTestable\ApiBundle\Services\Request\Factory\Job\StartRequestFactory
    arguments:
        requestStack: '@request_stack'
        tokenStorage: '@security.token_storage'
        entityManager: '@doctrine.orm.entity_manager'
        websiteService: '@simplytestable.services.websiteservice'
        jobTypeService: '@simplytestable.services.jobtypeservice'

  simplytestable.services.jobconfiguration.factory:
    class:   SimplyTestable\ApiBundle\Services\JobConfigurationFactory

  simplytestable.services.request.factory.job.list:
    class:   SimplyTestable\ApiBundle\Services\Request\Factory\Job\ListRequestFactory
    arguments:
        requestStack: '@request_stack'
        entityManager: '@doctrine.orm.entity_manager'
        jobService: '@simplytestable.services.jobservice'
        crawlJobContainerService: '@simplytestable.services.crawljobcontainerservice'
        tokenStorage: '@security.token_storage'
        stateRepository: '@simplytestable.repository.state'
        jobTypeRepository: '@simplytestable.repository.jobtype'

  simplytestable.services.applicationstatusfactory:
    class:   SimplyTestable\ApiBundle\Services\ApplicationStatusFactory
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      stateService: '@simplytestable.services.stateservice'
      taskRepository: '@simplytestable.repository.task'
      workerRepository: '@simplytestable.repository.worker'
      jobRepository: '@simplytestable.repository.job'

  simplytestable.services.usersummaryfactory:
    class:   SimplyTestable\ApiBundle\Services\UserSummaryFactory
    arguments:
      tokenStorage: '@security.token_storage'
      userAccountPlanService: '@simplytestable.services.useraccountplanservice'
      stripeService: '@simplytestable.services.stripeservice'
      jobUserAccountPlanEnforcementService: '@simplytestable.services.jobuseraccountplanenforcementservice'
      teamInviteService: '@simplytestable.services.teaminviteservice'
      teamService: '@simplytestable.services.teamservice'

  simplytestable.services.jobsummaryfactory:
    class:   SimplyTestable\ApiBundle\Services\JobSummaryFactory
    arguments:
      entityManager: '@doctrine.orm.entity_manager'
      taskService: '@simplytestable.services.taskservice'
      stateService: '@simplytestable.services.stateservice'
      jobService: '@simplytestable.services.jobservice'
      teamService: '@simplytestable.services.teamservice'
      crawlJobContainerService: '@simplytestable.services.crawljobcontainerservice'
      userAccountPlanService: '@simplytestable.services.useraccountplanservice'
      taskRepository: '@simplytestable.repository.task'
      jobRejectionReasonRepository: '@simplytestable.repository.jobrejectionreason'
      crawlJobUrlCollector: '@simplytestable.services.crawljoburlcollector'

  simplytestable.services.joblistconfigurationfactory:
    class:   SimplyTestable\ApiBundle\Services\JobListConfigurationFactory

  simplytestable.services.invite.tokengenerator:
    class: SimplyTestable\ApiBundle\Services\Team\InviteTokenGenerator
    arguments:
      teamInviteRepository: '@simplytestable.repository.teaminvite'

  simplytestable.services.task.urldiscovery:
    class: SimplyTestable\ApiBundle\Services\UrlDiscoveryTaskService
    arguments:
      stateService: '@simplytestable.services.stateservice'
      taskTypeService: '@simplytestable.services.tasktypeservice'

  simplytestable.services.taskpostprocessor.urldiscovery:
    class:   SimplyTestable\ApiBundle\Services\TaskPostProcessor\UrlDiscoveryTaskPostProcessor
    arguments:
      crawlJobContainerService: '@simplytestable.services.crawljobcontainerservice'
      crawlJobUrlCollector: '@simplytestable.services.crawljoburlcollector'
      jobUserAccountPlanEnforcementService: '@simplytestable.services.jobuseraccountplanenforcementservice'
      userAccountPlanService: '@simplytestable.services.useraccountplanservice'
      jobService: '@simplytestable.services.jobservice'
      entityManager: '@doctrine.orm.entity_manager'
      urlDiscoveryTaskService: '@simplytestable.services.task.urldiscovery'

  simplytestable.services.taskpostprocessor.factory:
    class:   SimplyTestable\ApiBundle\Services\TaskPostProcessor\Factory
    arguments:
      taskPreprocessors:
        - '@simplytestable.services.taskpostprocessor.urldiscovery'

  simplytestable.services.crawljoburlcollector:
    class:   SimplyTestable\ApiBundle\Services\CrawlJobUrlCollector
    arguments:
      stateService: '@simplytestable.services.stateservice'
      userAccountPlanService: '@simplytestable.services.useraccountplanservice'
      taskRepository: '@simplytestable.repository.task'
