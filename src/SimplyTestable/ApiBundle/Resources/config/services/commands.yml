services:
  simplytestable.command.cron.run:
    class:  SimplyTestable\ApiBundle\Command\Cron\RunCommand
    tags:
      - { name: console.command }

  simplytestable.command.job.enqueueprepareall:
    class:  SimplyTestable\ApiBundle\Command\Job\EnqueuePrepareAllCommand
    arguments:
      resqueQueueService: '@simplytestable.services.resque.queueservice'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      stateService: '@simplytestable.services.stateservice'
      entityManager: '@doctrine.orm.entity_manager'
      applicationStateService: '@simplytestable.services.applicationstateservice'
    tags:
      - { name: console.command }

  simplytestable.command.job.completealwithnoincompletetasks:
    class:  SimplyTestable\ApiBundle\Command\Job\CompleteAllWithNoIncompleteTasksCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      jobService: '@simplytestable.services.jobservice'
    tags:
      - { name: console.command }

  simplytestable.command.job.prepare:
    class:  SimplyTestable\ApiBundle\Command\Job\PrepareCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      resqueQueueService: '@simplytestable.services.resque.queueservice'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      jobService: '@simplytestable.services.jobservice'
      jobPreparationService: '@simplytestable.services.jobpreparationservice'
      crawlJobContainerService: '@simplytestable.services.crawljobcontainerservice'
      logger: '@logger'
      predefinedDomainsToIgnore:
        css-validation: '%css-validation-domains-to-ignore%'
        js-static-analysis: '%js-static-analysis-domains-to-ignore%'
    tags:
      - { name: console.command }

  simplytestable.command.job.resolvewebsite:
    class:  SimplyTestable\ApiBundle\Command\Job\ResolveWebsiteCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      resqueQueueService: '@simplytestable.services.resque.queueservice'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      jobService: '@simplytestable.services.jobservice'
      websiteResolutionService: '@simplytestable.services.jobwebsiteresolutionservice'
      jobPreparationService: '@simplytestable.services.jobpreparationservice'
      predefinedDomainsToIgnore:
        css-validation: '%css-validation-domains-to-ignore%'
        js-static-analysis: '%js-static-analysis-domains-to-ignore%'
    tags:
      - { name: console.command }

  simplytestable.command.maintenance.disablereadonly:
    class:  SimplyTestable\ApiBundle\Command\Maintenance\DisableReadOnlyCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
    tags:
      - { name: console.command }

  simplytestable.command.maintenance.enablebackupreadonly:
    class:  SimplyTestable\ApiBundle\Command\Maintenance\EnableBackupReadOnlyCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
    tags:
      - { name: console.command }

  simplytestable.command.maintenance.enablereadonly:
    class:  SimplyTestable\ApiBundle\Command\Maintenance\EnableReadOnlyCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
    tags:
      - { name: console.command }

  simplytestable.command.maintenance.modifyinitialstarttrialperiod:
    class:  SimplyTestable\ApiBundle\Command\Maintenance\ModifyInitialStartTrialPeriodCommand
    arguments:
      accountPlanService: '@simplytestable.services.accountplanservice'
      userAccountPlanService: '@simplytestable.services.useraccountplanservice'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.reporting.getoutputidsforerror:
    class:  SimplyTestable\ApiBundle\Command\Reporting\GetOutputIdsForErrorCommand
    arguments:
      taskTypeService: '@simplytestable.services.tasktypeservice'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.reporting.gettoperrors:
    class:  SimplyTestable\ApiBundle\Command\Reporting\GetTopErrorsCommand
    arguments:
      taskTypeService: '@simplytestable.services.tasktypeservice'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.scheduledjob.enqueue:
    class:  SimplyTestable\ApiBundle\Command\ScheduledJob\EnqueueCommand
    arguments:
      resqueQueueService: '@simplytestable.services.resque.queueservice'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      logger: '@logger'
    tags:
      - { name: console.command }

  simplytestable.command.scheduledjob.execute:
    class:  SimplyTestable\ApiBundle\Command\ScheduledJob\ExecuteCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      resqueQueueService: '@simplytestable.services.resque.queueservice'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      entityManager: '@doctrine.orm.entity_manager'
      jobStartService: '@simplytestable.services.job.startservice'
      jobService: '@simplytestable.services.jobservice'
    tags:
      - { name: console.command }

  simplytestable.command.stripe.event.process:
    class:  SimplyTestable\ApiBundle\Command\Stripe\Event\ProcessCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      entityManager: '@doctrine.orm.entity_manager'
      logger: '@logger'
      eventDispatcher: '@event_dispatcher'
    tags:
      - { name: console.command }

  simplytestable.command.stripe.event.updatedata:
    class:  SimplyTestable\ApiBundle\Command\Stripe\Event\UpdateDataCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      stripeEventService: '@simplytestable.services.stripeeventservice'
      stripeKey: '%stripe_key%'
    tags:
      - { name: console.command }

  simplytestable.command.task.assigncollection:
    class:  SimplyTestable\ApiBundle\Command\Task\Assign\CollectionCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      entityManager: '@doctrine.orm.entity_manager'
      taskPreProcessorFactory: '@simplytestable.services.taskpreprocessor.factory'
      resqueQueueService: '@simplytestable.services.resque.queueservice'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      stateService: '@simplytestable.services.stateservice'
      workerTaskAssignmentService: '@simplytestable.services.workertaskassignmentservice'
      logger: '@logger'
    tags:
      - { name: console.command }

  simplytestable.command.task.cancelcollection:
    class:  SimplyTestable\ApiBundle\Command\Task\Cancel\CollectionCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      taskService: '@simplytestable.services.taskservice'
      workerTaskCancellationService: '@simplytestable.services.workertaskcancellationservice'
      logger: '@logger'
    tags:
      - { name: console.command }

  simplytestable.command.task.enqueuecancellationforawaitingcancellationcommand:
    class:  SimplyTestable\ApiBundle\Command\Task\EnqueueCancellationForAwaitingCancellationCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      entityManager: '@doctrine.orm.entity_manager'
      stateService: '@simplytestable.services.stateservice'
      resqueQueueService: '@simplytestable.services.resque.queueservice'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
    tags:
      - { name: console.command }

  simplytestable.command.tasks.requeuequeuedforassignment:
    class:  SimplyTestable\ApiBundle\Command\Tasks\RequeueQueuedForAssignmentCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      stateService: '@simplytestable.services.stateservice'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.user.addnonplanneduserstobascicplan:
    class:  SimplyTestable\ApiBundle\Command\User\AddNonPlannedUsersToBasicPlanCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      userAccountPlanService: '@simplytestable.services.useraccountplanservice'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.worker.settokenfromactivationrequest:
    class:  SimplyTestable\ApiBundle\Command\Worker\SetTokenFromActivationRequestCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.worker.tasknotification:
    class:  SimplyTestable\ApiBundle\Command\Worker\TaskNotificationCommand
    arguments:
      workerTaskNotificationService: '@simplytestable.services.worker.tasknotificationservice'
    tags:
      - { name: console.command }

  simplytestable.command.worker.activateverify:
    class:  SimplyTestable\ApiBundle\Command\Worker\ActivateVerifyCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      entityManager: '@doctrine.orm.entity_manager'
      workerActivationRequestService: '@simplytestable.services.workeractivationrequestservice'
    tags:
      - { name: console.command }

  simplytestable.command.migrate.addhashtohashlessoutput:
    class:  SimplyTestable\ApiBundle\Command\Migrate\AddHashToHashlessOutputCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.migrate.canonicalisetaskoutput:
    class:  SimplyTestable\ApiBundle\Command\Migrate\CanonicaliseTaskOutputCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.migrate.normalisejslintoutput:
    class:  SimplyTestable\ApiBundle\Command\Migrate\NormaliseJsLintOutputCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.migrate.removeunusedoutput:
    class:  SimplyTestable\ApiBundle\Command\Migrate\RemoveUnusedOutputCommand
    arguments:
      applicationStateService: '@simplytestable.services.applicationstateservice'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }
