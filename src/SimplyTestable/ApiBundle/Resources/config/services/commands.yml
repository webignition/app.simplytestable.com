services:
  simplytestable.command.cron.run:
    class:  SimplyTestable\ApiBundle\Command\Cron\RunCommand
    tags:
      - { name: console.command }

  simplytestable.command.job.enqueueprepareall:
    class:  SimplyTestable\ApiBundle\Command\Job\EnqueuePrepareAllCommand
    arguments:
      resqueQueueService: '@SimplyTestable\ApiBundle\Services\Resque\QueueService'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      stateService: '@SimplyTestable\ApiBundle\Services\StateService'
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.job.completealwithnoincompletetasks:
    class:  SimplyTestable\ApiBundle\Command\Job\CompleteAllWithNoIncompleteTasksCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      jobService: '@SimplyTestable\ApiBundle\Services\JobService'
    tags:
      - { name: console.command }

  simplytestable.command.job.prepare:
    class:  SimplyTestable\ApiBundle\Command\Job\PrepareCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      resqueQueueService: '@SimplyTestable\ApiBundle\Services\Resque\QueueService'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      jobPreparationService: '@SimplyTestable\ApiBundle\Services\JobPreparationService'
      crawlJobContainerService: '@SimplyTestable\ApiBundle\Services\CrawlJobContainerService'
      logger: '@logger'
      entityManager: '@doctrine.orm.entity_manager'
      predefinedDomainsToIgnore:
        css-validation: '%css_validation_domains_to_ignore%'
        js-static-analysis: '%js_static_analysis_domains_to_ignore%'
    tags:
      - { name: console.command }

  simplytestable.command.job.resolvewebsite:
    class:  SimplyTestable\ApiBundle\Command\Job\ResolveWebsiteCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      resqueQueueService: '@SimplyTestable\ApiBundle\Services\Resque\QueueService'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      websiteResolutionService: '@SimplyTestable\ApiBundle\Services\Job\WebsiteResolutionService'
      jobPreparationService: '@SimplyTestable\ApiBundle\Services\JobPreparationService'
      entityManager: '@doctrine.orm.entity_manager'
      predefinedDomainsToIgnore:
        css-validation: '%css_validation_domains_to_ignore%'
        js-static-analysis: '%js_static_analysis_domains_to_ignore%'
    tags:
      - { name: console.command }

  simplytestable.command.maintenance.disablereadonly:
    class:  SimplyTestable\ApiBundle\Command\Maintenance\DisableReadOnlyCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
    tags:
      - { name: console.command }

  simplytestable.command.maintenance.enablebackupreadonly:
    class:  SimplyTestable\ApiBundle\Command\Maintenance\EnableBackupReadOnlyCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
    tags:
      - { name: console.command }

  simplytestable.command.maintenance.enablereadonly:
    class:  SimplyTestable\ApiBundle\Command\Maintenance\EnableReadOnlyCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
    tags:
      - { name: console.command }

  simplytestable.command.maintenance.modifyinitialstarttrialperiod:
    class:  SimplyTestable\ApiBundle\Command\Maintenance\ModifyInitialStartTrialPeriodCommand
    arguments:
      userAccountPlanService: '@SimplyTestable\ApiBundle\Services\UserAccountPlanService'
      entityManager: '@doctrine.orm.entity_manager'
      accountPlanService: '@SimplyTestable\ApiBundle\Services\AccountPlanService'
    tags:
      - { name: console.command }

  simplytestable.command.reporting.getoutputidsforerror:
    class:  SimplyTestable\ApiBundle\Command\Reporting\GetOutputIdsForErrorCommand
    arguments:
      taskTypeService: '@SimplyTestable\ApiBundle\Services\TaskTypeService'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.reporting.gettoperrors:
    class:  SimplyTestable\ApiBundle\Command\Reporting\GetTopErrorsCommand
    arguments:
      taskTypeService: '@SimplyTestable\ApiBundle\Services\TaskTypeService'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.scheduledjob.enqueue:
    class:  SimplyTestable\ApiBundle\Command\ScheduledJob\EnqueueCommand
    arguments:
      resqueQueueService: '@SimplyTestable\ApiBundle\Services\Resque\QueueService'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      logger: '@logger'
    tags:
      - { name: console.command }

  simplytestable.command.scheduledjob.execute:
    class:  SimplyTestable\ApiBundle\Command\ScheduledJob\ExecuteCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      resqueQueueService: '@SimplyTestable\ApiBundle\Services\Resque\QueueService'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      entityManager: '@doctrine.orm.entity_manager'
      jobStartService: '@simplytestable.services.job.startservice'
      jobService: '@SimplyTestable\ApiBundle\Services\JobService'
    tags:
      - { name: console.command }

  simplytestable.command.stripe.event.process:
    class:  SimplyTestable\ApiBundle\Command\Stripe\Event\ProcessCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      entityManager: '@doctrine.orm.entity_manager'
      logger: '@logger'
      eventDispatcher: '@event_dispatcher'
    tags:
      - { name: console.command }

  simplytestable.command.stripe.event.updatedata:
    class:  SimplyTestable\ApiBundle\Command\Stripe\Event\UpdateDataCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      stripeEventService: '@SimplyTestable\ApiBundle\Services\StripeEventService'
      entityManager: '@doctrine.orm.entity_manager'
      stripeKey: '%stripe_key%'
    tags:
      - { name: console.command }

  simplytestable.command.task.assigncollection:
    class:  SimplyTestable\ApiBundle\Command\Task\Assign\CollectionCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      entityManager: '@doctrine.orm.entity_manager'
      taskPreProcessorFactory: '@SimplyTestable\ApiBundle\Services\TaskPreProcessor\Factory'
      resqueQueueService: '@SimplyTestable\ApiBundle\Services\Resque\QueueService'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
      stateService: '@SimplyTestable\ApiBundle\Services\StateService'
      workerTaskAssignmentService: '@SimplyTestable\ApiBundle\Services\WorkerTaskAssignmentService'
      logger: '@logger'
    tags:
      - { name: console.command }

  simplytestable.command.task.cancelcollection:
    class:  SimplyTestable\ApiBundle\Command\Task\Cancel\CollectionCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      taskService: '@SimplyTestable\ApiBundle\Services\TaskService'
      workerTaskCancellationService: '@SimplyTestable\ApiBundle\Services\WorkerTaskCancellationService'
      logger: '@logger'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.task.enqueuecancellationforawaitingcancellationcommand:
    class:  SimplyTestable\ApiBundle\Command\Task\EnqueueCancellationForAwaitingCancellationCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      entityManager: '@doctrine.orm.entity_manager'
      stateService: '@SimplyTestable\ApiBundle\Services\StateService'
      resqueQueueService: '@SimplyTestable\ApiBundle\Services\Resque\QueueService'
      resqueJobFactory: '@simplytestable.services.resque.jobfactory'
    tags:
      - { name: console.command }

  simplytestable.command.tasks.requeuequeuedforassignment:
    class:  SimplyTestable\ApiBundle\Command\Tasks\RequeueQueuedForAssignmentCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      stateService: '@SimplyTestable\ApiBundle\Services\StateService'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.user.addnonplanneduserstobascicplan:
    class:  SimplyTestable\ApiBundle\Command\User\AddNonPlannedUsersToBasicPlanCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      userAccountPlanService: '@SimplyTestable\ApiBundle\Services\UserAccountPlanService'
      entityManager: '@doctrine.orm.entity_manager'
      accountPlanService: '@SimplyTestable\ApiBundle\Services\AccountPlanService'
    tags:
      - { name: console.command }

  simplytestable.command.worker.settokenfromactivationrequest:
    class:  SimplyTestable\ApiBundle\Command\Worker\SetTokenFromActivationRequestCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.worker.tasknotification:
    class:  SimplyTestable\ApiBundle\Command\Worker\TaskNotificationCommand
    arguments:
      workerTaskNotificationService: '@simplytestable.services.worker.tasknotificationservice'
    tags:
      - { name: console.command }

  simplytestable.command.worker.activateverify:
    class:  SimplyTestable\ApiBundle\Command\Worker\ActivateVerifyCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      workerActivationRequestService: '@SimplyTestable\ApiBundle\Services\WorkerActivationRequestService'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.migrate.addhashtohashlessoutput:
    class:  SimplyTestable\ApiBundle\Command\Migrate\AddHashToHashlessOutputCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.migrate.canonicalisetaskoutput:
    class:  SimplyTestable\ApiBundle\Command\Migrate\CanonicaliseTaskOutputCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }

  simplytestable.command.migrate.normalisejslintoutput:
    class:  SimplyTestable\ApiBundle\Command\Migrate\NormaliseJsLintOutputCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      entityManager: '@doctrine.orm.entity_manager'
      taskTypeService: '@SimplyTestable\ApiBundle\Services\TaskTypeService'
    tags:
      - { name: console.command }

  simplytestable.command.migrate.removeunusedoutput:
    class:  SimplyTestable\ApiBundle\Command\Migrate\RemoveUnusedOutputCommand
    arguments:
      applicationStateService: '@SimplyTestable\ApiBundle\Services\ApplicationStateService'
      entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: console.command }
